import{B as e,f as t,C as n,a as s,Z as a,W as i,J as o,p as r,b as l}from"./vendor-821c5c53.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var c=Object.defineProperty,d=(e,t,n)=>(((e,t,n)=>{t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class h{constructor(){d(this,"listeners",new Map)}on(e,t){return this.listeners.has(e)||this.listeners.set(e,new Set),this.listeners.get(e).add(t),this}off(e,t){const n=this.listeners.get(e);return n&&(n.delete(t),0===n.size&&this.listeners.delete(e)),this}once(e,t){const n=(...s)=>{this.off(e,n),t(...s)};return this.on(e,n)}emit(e,...t){const n=this.listeners.get(e);if(!n||0===n.size)return!1;for(const a of Array.from(n))try{a(...t)}catch(s){console.error(`Error in listener for event '${e}':`,s)}return!0}removeAllListeners(e){return e?this.listeners.delete(e):this.listeners.clear(),this}}const u={1:{id:1,name:"Ethereum",symbol:"ETH",decimals:18,rpcUrl:"https://eth.llamarpc.com",blockExplorer:"https://etherscan.io",logoUrl:"https://cryptologos.cc/logos/ethereum-eth-logo.svg"},137:{id:137,name:"Polygon",symbol:"MATIC",decimals:18,rpcUrl:"https://polygon.llamarpc.com",blockExplorer:"https://polygonscan.com",logoUrl:"https://cryptologos.cc/logos/polygon-matic-logo.svg"},56:{id:56,name:"BNB Smart Chain",symbol:"BNB",decimals:18,rpcUrl:"https://bsc.llamarpc.com",blockExplorer:"https://bscscan.com",logoUrl:"https://cryptologos.cc/logos/bnb-bnb-logo.svg"},42161:{id:42161,name:"Arbitrum One",symbol:"ETH",decimals:18,rpcUrl:"https://arbitrum.llamarpc.com",blockExplorer:"https://arbiscan.io",logoUrl:"https://cryptologos.cc/logos/arbitrum-arb-logo.svg"},10:{id:10,name:"Optimism",symbol:"ETH",decimals:18,rpcUrl:"https://optimism.llamarpc.com",blockExplorer:"https://optimistic.etherscan.io",logoUrl:"https://cryptologos.cc/logos/optimism-ethereum-op-logo.svg"},8453:{id:8453,name:"Base",symbol:"ETH",decimals:18,rpcUrl:"https://base.llamarpc.com",blockExplorer:"https://basescan.org",logoUrl:"https://cryptologos.cc/logos/base-base-logo.svg"}};var m=Object.defineProperty,g=(e,t,n)=>(((e,t,n)=>{t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class p extends h{constructor(){super(),g(this,"state",{isConnected:!1,address:null,chainId:null,balance:"0",provider:null,signer:null}),this.setupEventListeners()}async initialize(){"true"===localStorage.getItem("wallet-connected")&&this.isMetaMaskAvailable()&&await this.connectWallet()}isMetaMaskAvailable(){return"undefined"!=typeof window&&void 0!==window.ethereum}setupEventListeners(){this.isMetaMaskAvailable()&&(window.ethereum.on("accountsChanged",e=>{0===e.length?this.disconnect():this.handleAccountChange(e[0])}),window.ethereum.on("chainChanged",e=>{this.handleChainChange(parseInt(e,16))}),window.ethereum.on("disconnect",()=>{this.disconnect()}))}async connectWallet(){if(!this.isMetaMaskAvailable())throw new Error("MetaMask is not installed");try{if(0===(await window.ethereum.request({method:"eth_requestAccounts"})).length)throw new Error("No accounts found");const n=new e(window.ethereum),s=await n.getSigner(),a=await s.getAddress(),i=await n.getNetwork(),o=await n.getBalance(a);this.state={isConnected:!0,address:a,chainId:Number(i.chainId),balance:t(o),provider:n,signer:s},localStorage.setItem("wallet-connected","true"),this.emit("connected",this.state),console.log("✅ Wallet connected:",a)}catch(n){throw console.error("❌ Failed to connect wallet:",n),n}}async disconnect(){this.state={isConnected:!1,address:null,chainId:null,balance:"0",provider:null,signer:null},localStorage.removeItem("wallet-connected"),this.emit("disconnected"),console.log("🔌 Wallet disconnected")}async switchNetwork(e){if(!this.isMetaMaskAvailable()||!this.state.isConnected)throw new Error("Wallet not connected");const t=u[e];if(!t)throw new Error(`Unsupported chain ID: ${e}`);try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:`0x${e.toString(16)}`}]})}catch(n){if(4902!==n.code)throw n;await this.addNetwork(t)}}async addNetwork(e){await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:`0x${e.id.toString(16)}`,chainName:e.name,nativeCurrency:{name:e.symbol,symbol:e.symbol,decimals:e.decimals},rpcUrls:[e.rpcUrl],blockExplorerUrls:[e.blockExplorer]}]})}async handleAccountChange(e){if(this.state.provider){const n=await this.state.provider.getBalance(e);this.state.address=e,this.state.balance=t(n),this.emit("accountChanged",this.state)}}async handleChainChange(e){if(this.state.chainId=e,this.state.provider&&this.state.address){const e=await this.state.provider.getBalance(this.state.address);this.state.balance=t(e)}this.emit("chainChanged",this.state)}async updateBalance(){if(this.state.provider&&this.state.address){const e=await this.state.provider.getBalance(this.state.address);this.state.balance=t(e),this.emit("balanceUpdated",this.state)}}async sendTransaction(e){if(!this.state.signer)throw new Error("Wallet not connected");return(await this.state.signer.sendTransaction(e)).hash}async signMessage(e){if(!this.state.signer)throw new Error("Wallet not connected");return await this.state.signer.signMessage(e)}getState(){return{...this.state}}isConnected(){return this.state.isConnected}getAddress(){return this.state.address}getChainId(){return this.state.chainId}getProvider(){return this.state.provider}getSigner(){return this.state.signer}}const w="100000",f="150000",v="21000",b="20000000000",T="2000000000";var k=Object.defineProperty,y=(e,t,n)=>(((e,t,n)=>{t in e?k(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class x{constructor(e,t,n){this.entryPointAddress=e,this.bundlerWallet=t,this.provider=n,y(this,"pendingIntents",new Map),y(this,"bundleQueue",[]),y(this,"activeBundles",new Map),y(this,"BUNDLE_SIZE",5),y(this,"BUNDLE_TIMEOUT",1e4)}async createSwapIntent(e,t,n,s,a=.5,i=1){const o=await this.generateFairOrderingProof({userAddress:e,fromToken:t,toToken:n,amount:s,timestamp:Date.now()}),r=await this.getOKXSwap({chainId:i,fromTokenAddress:t,toTokenAddress:n,amount:s,userWalletAddress:e}),l=function(e,t,n,s,a,i,o=!0){return{id:`intent_${Date.now()}_${Math.random().toString(36).slice(2)}`,user:e,fromToken:t,toToken:n,fromAmount:s,minToAmount:a,deadline:Date.now()+12e5,slippage:i,mevProtection:o,status:"pending",timestamp:Date.now()}}(e,t,n,s,(parseFloat(r?.data?.[0]?.routerResult?.toTokenAmount||"0")*(1-a/100)).toString(),a,!0);return l.zkProof=o,this.pendingIntents.set(l.id,l),this.bundleQueue.push(l),this.shouldCreateBundle()&&await this.createBundle(),l}async submitUserOperation(e){try{if(!this.isValidUserOperation(e))return{userOpHash:e.hash,status:"rejected",reason:"Invalid user operation"};const t={id:e.hash,user:e.sender,fromToken:"",toToken:"",fromAmount:"",minToAmount:"",deadline:Date.now()+12e5,slippage:.5,mevProtection:!0,status:"pending",timestamp:Date.now()};return this.pendingIntents.set(t.id,t),this.bundleQueue.push(t),this.shouldCreateBundle()&&await this.createBundle(),{userOpHash:e.hash,status:"accepted",estimatedGas:e.callGasLimit,estimatedTime:this.BUNDLE_TIMEOUT}}catch(t){return{userOpHash:e.hash,status:"rejected",reason:t.message}}}async createUserOperation(e,t){const n=await this.getUserOpNonce(e.user),s=(e.user,n.toString(),t.data,this.entryPointAddress,await this.provider.getNetwork().then(e=>Number(e.chainId)),`0x${Math.random().toString(16).slice(2)}`);return{sender:e.user,nonce:n.toString(),initCode:"0x",callData:t.data||"0x",callGasLimit:w,verificationGasLimit:f,preVerificationGas:v,maxFeePerGas:b,maxPriorityFeePerGas:T,paymasterAndData:"0x",signature:"0x",hash:s,status:"pending",timestamp:Date.now()}}shouldCreateBundle(){return this.bundleQueue.length>=this.BUNDLE_SIZE||this.bundleQueue.length>0&&this.getOldestIntentAge()>this.BUNDLE_TIMEOUT}async createBundle(){if(0===this.bundleQueue.length)return;const e=this.bundleQueue.splice(0,this.BUNDLE_SIZE),t=[];for(const a of e)try{const e=await this.getSwapTransactionData(a),n=await this.createUserOperation(a,e);t.push(n)}catch(s){console.error("Failed to create user operation for intent:",a.id,s),a.status="failed",this.pendingIntents.set(a.id,a)}if(0===t.length)return;const n=function(e,t=!0,n=!0){return{id:`bundle_${Date.now()}_${Math.random().toString(36).slice(2)}`,userOperations:e,status:"pending",timestamp:Date.now(),mevProtection:t,fairOrdering:n}}(t,!0,!0);this.activeBundles.set(n.id,n);try{const s=await this.createBundleTransaction(t),a=await s.wait();n.status="confirmed",n.txHash=a.transactionHash,this.activeBundles.set(n.id,n);for(const t of e)t.status="executed",this.pendingIntents.set(t.id,t);console.log("Bundle executed successfully:",n.id,a.transactionHash)}catch(s){console.error("Failed to execute bundle:",n.id,s),n.status="failed",this.activeBundles.set(n.id,n);for(const t of e)t.status="failed",this.pendingIntents.set(t.id,t)}}async createBundleTransaction(e){const t=new n(this.entryPointAddress,["function handleOps(tuple[] calldata ops, address payable beneficiary)"],this.bundlerWallet),s=e.map(e=>[e.sender,e.nonce,e.initCode,e.callData,e.callGasLimit,e.verificationGasLimit,e.preVerificationGas,e.maxFeePerGas,e.maxPriorityFeePerGas,e.paymasterAndData,e.signature]);return t.handleOps(s,this.bundlerWallet.address)}async getUserOpNonce(e){return Math.floor(1e6*Math.random())}getOldestIntentAge(){if(0===this.bundleQueue.length)return 0;const e=Math.min(...this.bundleQueue.map(e=>e.timestamp));return Date.now()-e}isValidUserOperation(e){return""!==e.sender&&""!==e.nonce&&""!==e.callData&&""!==e.signature}async generateFairOrderingProof(e){return{proof:"0x"+"0".repeat(512),publicSignals:[e.userAddress,e.fromToken,e.toToken,e.amount.toString()],verificationKey:"0x"+"1".repeat(64),circuit:"fair-ordering-v1"}}async getOKXSwap(e){try{return(await s.get("https://www.okx.com/api/v5/dex/aggregator/swap",{params:{chainId:e.chainId,fromTokenAddress:e.fromTokenAddress,toTokenAddress:e.toTokenAddress,amount:e.amount,userWalletAddress:e.userWalletAddress,slippage:"0.5"}})).data}catch(t){return console.error("Failed to get OKX swap quote:",t),null}}async getSwapTransactionData(e){const t=await this.getOKXSwap({chainId:1,fromTokenAddress:e.fromToken,toTokenAddress:e.toToken,amount:e.fromAmount,userWalletAddress:e.user});return t?.data?.[0]?.tx||{data:"0x"}}getPendingIntents(){return Array.from(this.pendingIntents.values())}getActiveBundles(){return Array.from(this.activeBundles.values())}getIntent(e){return this.pendingIntents.get(e)}getBundle(e){return this.activeBundles.get(e)}async calculateMEVSavings(e){return(.001*parseFloat(e.fromAmount)).toString()}}let E=null;const S=["function balanceOf(address owner) view returns (uint256)","function decimals() view returns (uint8)","function symbol() view returns (string)","function name() view returns (string)","function allowance(address owner, address spender) view returns (uint256)","function approve(address spender, uint256 amount) returns (bool)"];const M="https://www.okx.com/api/v5/dex/aggregator";var A=Object.defineProperty,I=(e,t,n)=>(((e,t,n)=>{t in e?A(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class C extends h{constructor(e){super(),I(this,"walletManager"),I(this,"bundlerInitialized",!1),I(this,"availableTokens",[]),I(this,"currentQuote",null),this.walletManager=e,this.setupEventListeners()}async initialize(){try{await this.loadTokens(),console.log("✅ DEX Aggregator initialized")}catch(e){throw console.error("❌ Failed to initialize DEX Aggregator:",e),e}}setupEventListeners(){this.walletManager.on("chainChanged",()=>{this.loadTokens()})}async loadTokens(){const e=this.walletManager.getChainId();if(e)try{this.availableTokens=Object.values(require("../libs/token/types").POPULAR_TOKENS[e]||{}),this.emit("tokensLoaded",this.availableTokens)}catch(t){console.error("Failed to load tokens:",t),this.availableTokens=[]}}async getQuote(e){const{fromToken:t,toToken:n,amount:a}=e,i=this.walletManager.getChainId(),o=this.walletManager.getAddress();if(!i||!o)throw new Error("Wallet not connected");try{const e={chainId:i,fromTokenAddress:t.address||"",toTokenAddress:n.address||"",amount:a},o=await async function(e){try{const t=new URLSearchParams({chainId:e.chainId.toString(),fromTokenAddress:e.fromTokenAddress,toTokenAddress:e.toTokenAddress,amount:e.amount,slippage:(e.slippage||.5).toString()}),n=await s.get(`${M}/quote?${t.toString()}`);if("0"!==n.data.code||!n.data.data?.[0])throw new Error(n.data.msg||"Failed to get quote");const a=n.data.data[0];return{fromToken:{address:a.fromToken.tokenContractAddress,symbol:a.fromToken.tokenSymbol,decimals:18,name:a.fromToken.tokenSymbol,chainId:e.chainId},toToken:{address:a.toToken.tokenContractAddress,symbol:a.toToken.tokenSymbol,decimals:18,name:a.toToken.tokenSymbol,chainId:e.chainId},fromAmount:a.fromTokenAmount,toAmount:a.toTokenAmount,estimatedGas:a.estimateGasFee,route:a.dexRouterList.map(t=>({protocol:t.router,percentage:parseFloat(t.routerPercent),fromToken:{address:a.fromToken.tokenContractAddress,symbol:a.fromToken.tokenSymbol,decimals:18,name:a.fromToken.tokenSymbol,chainId:e.chainId},toToken:{address:a.toToken.tokenContractAddress,symbol:a.toToken.tokenSymbol,decimals:18,name:a.toToken.tokenSymbol,chainId:e.chainId}})),priceImpact:0,rate:(parseFloat(a.toTokenAmount)/Math.max(parseFloat(a.fromTokenAmount),1e-18)).toString(),validUntil:Date.now()+6e4}}catch(t){throw console.error("OKX quote error:",t),t}}(e);return this.currentQuote={fromAmount:a,toAmount:o.toAmount,estimatedGas:o.estimatedGas||"0",priceImpact:this.calculatePriceImpact(a,o.toAmount),route:o.route?.map(e=>e.protocol)||[]},this.emit("quoteUpdated",this.currentQuote),this.currentQuote}catch(r){throw console.error("Failed to get quote:",r),new Error("Failed to get swap quote")}}async executeSwap(e){const{useSmartAccount:t}=e,n=this.walletManager.getChainId(),s=this.walletManager.getAddress(),a=this.walletManager.getProvider();if(!n||!s||!a)throw new Error("Wallet not connected");this.emit("swapStarted",e);try{return t&&!this.bundlerInitialized&&await this.initializeBundler(),t&&this.bundlerInitialized?await this.executeSmartAccountSwap(e):await this.executeDirectSwap(e)}catch(i){throw this.emit("swapFailed",i),i}}async initializeBundler(){if(!this.walletManager.getProvider())throw new Error("Provider not available");const e="0x"+"1".repeat(64);!function(e,t,n){E=new x(e,t,n)}("0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789",new i(e),new o("https://eth.llamarpc.com")),this.bundlerInitialized=!0}async executeSmartAccountSwap(e){const{fromToken:t,toToken:n,amount:s}=e,a=this.walletManager.getChainId(),i=this.walletManager.getAddress(),o=E;if(!o)throw new Error("Bundler not initialized");const r=await o.createSwapIntent(i,t.address||"",n.address||"",s,a);return this.emit("bundleIntentCreated",r),new Promise((e,t)=>{const n=setTimeout(()=>{t(new Error("Bundle execution timeout"))},3e4),s=setInterval(async()=>{const a=o.getIntent(r.id);"executed"===a?.status?(clearInterval(s),clearTimeout(n),e({txHash:r.id,bundleId:r.id})):"failed"===a?.status&&(clearInterval(s),clearTimeout(n),t(new Error("Bundle execution failed")))},1e3)})}async executeDirectSwap(e){const{fromToken:t,toToken:n,amount:a,slippage:i}=e,o=this.walletManager.getChainId(),r=this.walletManager.getAddress(),l={chainId:o,fromTokenAddress:t.address||"",toTokenAddress:n.address||"",amount:a,userWalletAddress:r,slippage:i},c=await async function(e){try{const t=new URLSearchParams({chainId:e.chainId.toString(),fromTokenAddress:e.fromTokenAddress,toTokenAddress:e.toTokenAddress,amount:e.amount,slippage:(e.slippage||.5).toString(),userWalletAddress:e.userWalletAddress});e.referrerAddress&&t.append("referrerAddress",e.referrerAddress);const n=await s.get(`${M}/swap?${t.toString()}`);if("0"!==n.data.code||!n.data.data?.[0])throw new Error(n.data.msg||"Failed to get swap data");return n.data.data[0]}catch(t){throw console.error("OKX swap error:",t),t}}(l),d=c.tx,h=d.to;await this.checkTokenApproval(t,h,a)||await this.approveToken(t,h,a);const u=await this.walletManager.sendTransaction({to:d.to,data:d.data,value:d.value||"0x0",gasLimit:d.gas||void 0});return this.emit("swapCompleted",{txHash:u}),{txHash:u}}async checkTokenApproval(e,t,s){if(e.address===a)return!0;const i=this.walletManager.getSigner();if(!i)return!1;const o=new n(e.address,["function allowance(address owner, address spender) view returns (uint256)"],i),l=await i.getAddress();return await o.allowance(l,t)>=r(s,e.decimals)}async approveToken(e,t,s){const i=this.walletManager.getSigner();if(!i)throw new Error("Signer not available");await async function(e,t,s,i){try{if(e===a||"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"===e.toLowerCase())throw new Error("Cannot approve native token");const o=new n(e,S,i);return await o.approve(t,s)}catch(o){throw console.error("Error approving token allowance:",o),o}}(e.address,t,s,i)}calculatePriceImpact(e,t){try{const n=parseFloat(e),s=parseFloat(t);if(!isFinite(n)||n<=0)return"0.00";const a=s/n;return Math.max(0,100*(1-a)).toFixed(2)}catch{return"0.00"}}getAvailableTokens(){return this.availableTokens}getCurrentQuote(){return this.currentQuote}async getTokenBalance(e){const s=this.walletManager.getProvider(),i=this.walletManager.getAddress();if(!s||!i)return"0";if(e.address===a){const e=await s.getBalance(i);return t(e)}const o=new n(e.address,["function balanceOf(address owner) view returns (uint256)","function decimals() view returns (uint8)"],s),[r,c]=await Promise.all([o.balanceOf(i),o.decimals()]);return l(r,c)}}function B(e,t){let n=null;return(...s)=>{n&&clearTimeout(n),n=setTimeout(()=>{e(...s)},t)}}var L=Object.defineProperty,$=(e,t,n)=>(((e,t,n)=>{t in e?L(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class U{constructor(e,t,n){$(this,"walletManager"),$(this,"dexAggregator"),$(this,"notificationManager"),$(this,"selectedFromToken",null),$(this,"selectedToToken",null),$(this,"fromAmount",""),$(this,"slippage",.5),$(this,"useSmartAccount",!1),$(this,"isSwapping",!1),$(this,"elements",{}),this.walletManager=e,this.dexAggregator=t,this.notificationManager=n}initialize(){this.cacheElements(),this.setupEventListeners(),this.setupServiceListeners(),this.updateUI(),console.log("✅ UI Manager initialized")}cacheElements(){["connect-wallet","chain-selector","from-amount","to-amount","from-token-selector","to-token-selector","switch-tokens","smart-account-toggle","swap-btn","swap-btn-text","swap-loading","from-balance","to-balance","tx-info","estimated-gas","price-impact","token-selector-modal","token-search","token-list"].forEach(e=>{const t=document.getElementById(e);t?this.elements[e]=t:console.warn(`Element with id '${e}' not found`)})}setupEventListeners(){this.elements["connect-wallet"]?.addEventListener("click",()=>{this.handleWalletConnect()});const e=this.elements["from-amount"];e&&e.addEventListener("input",B(()=>{this.handleAmountChange(e.value)},500)),this.elements["from-token-selector"]?.addEventListener("click",()=>{this.openTokenSelector("from")}),this.elements["to-token-selector"]?.addEventListener("click",()=>{this.openTokenSelector("to")}),this.elements["switch-tokens"]?.addEventListener("click",()=>{this.switchTokens()});const t=this.elements["smart-account-toggle"];t&&t.addEventListener("change",()=>{this.useSmartAccount=t.checked,this.updateSwapButton()}),this.elements["swap-btn"]?.addEventListener("click",()=>{this.handleSwap()});const n=this.elements["token-search"];n&&n.addEventListener("input",B(()=>{this.filterTokens(n.value)},300))}setupServiceListeners(){this.walletManager.on("connected",()=>{this.updateUI(),this.notificationManager.showSuccess("Wallet connected successfully")}),this.walletManager.on("disconnected",()=>{this.updateUI(),this.notificationManager.showInfo("Wallet disconnected")}),this.walletManager.on("chainChanged",()=>{this.updateUI(),this.loadTokenBalances()}),this.walletManager.on("accountChanged",()=>{this.updateUI(),this.loadTokenBalances()}),this.dexAggregator.on("tokensLoaded",e=>{this.populateTokenList(e)}),this.dexAggregator.on("quoteUpdated",e=>{this.updateQuoteDisplay(e)}),this.dexAggregator.on("swapStarted",()=>{this.isSwapping=!0,this.updateSwapButton()}),this.dexAggregator.on("swapExecuted",e=>{this.isSwapping=!1,this.updateSwapButton(),this.notificationManager.showSuccess(`Swap executed! <a href="${this.getExplorerUrl(e.txHash)}" target="_blank">View Transaction</a>`)}),this.dexAggregator.on("swapFailed",e=>{this.isSwapping=!1,this.updateSwapButton(),this.notificationManager.showError(`Swap failed: ${e.message}`)})}async handleWalletConnect(){try{this.walletManager.isConnected()?await this.walletManager.disconnect():await this.walletManager.connectWallet()}catch(e){this.notificationManager.showError(`Failed to connect wallet: ${e.message}`)}}async handleAmountChange(e){if(this.fromAmount=e,this.selectedFromToken&&this.selectedToToken&&e&&parseFloat(e)>0)try{await this.dexAggregator.getQuote({fromToken:this.selectedFromToken,toToken:this.selectedToToken,amount:e,slippage:this.slippage})}catch(t){console.error("Failed to get quote:",t)}else this.clearQuoteDisplay()}openTokenSelector(e){const t=this.elements["token-selector-modal"];if(t){t.classList.add("modal-open"),t.setAttribute("data-token-type",e);const n=this.elements["token-search"];n&&(n.value="",n.focus()),this.filterTokens("")}}switchTokens(){const e=this.selectedFromToken;this.selectedFromToken=this.selectedToToken,this.selectedToToken=e,this.updateTokenSelectors(),this.loadTokenBalances(),this.fromAmount&&this.handleAmountChange(this.fromAmount)}async handleSwap(){if(!this.selectedFromToken||!this.selectedToToken||!this.fromAmount)return void this.notificationManager.showError("Please select tokens and enter amount");if(!this.walletManager.isConnected())return void this.notificationManager.showError("Please connect your wallet");const e={fromToken:this.selectedFromToken,toToken:this.selectedToToken,amount:this.fromAmount,slippage:this.slippage,useSmartAccount:this.useSmartAccount};try{await this.dexAggregator.executeSwap(e)}catch(t){this.notificationManager.showError(`Swap failed: ${t.message}`)}}populateTokenList(e){const t=this.elements["token-list"];t&&(t.innerHTML="",e.forEach(e=>{const n=this.createTokenListItem(e);t.appendChild(n)}))}createTokenListItem(e){const t=document.createElement("div");return t.className="flex items-center space-x-3 p-3 hover:bg-base-200 cursor-pointer rounded-lg",t.innerHTML=`\n      <div class="avatar">\n        <div class="w-8 h-8 rounded-full">\n          <img src="${e.logoURI||"/default-token.svg"}" alt="${e.symbol}" />\n        </div>\n      </div>\n      <div class="flex-1">\n        <div class="font-medium">${e.symbol}</div>\n        <div class="text-sm text-base-content/60">${e.name}</div>\n      </div>\n      <div class="text-right">\n        <div class="font-medium" data-token-balance="${e.address}">0</div>\n      </div>\n    `,t.addEventListener("click",()=>{this.selectToken(e)}),t}selectToken(e){const t=this.elements["token-selector-modal"],n=t?.getAttribute("data-token-type");"from"===n?this.selectedFromToken=e:"to"===n&&(this.selectedToToken=e),this.updateTokenSelectors(),this.loadTokenBalances(),t?.classList.remove("modal-open"),this.selectedFromToken&&this.selectedToToken&&this.fromAmount&&this.handleAmountChange(this.fromAmount)}filterTokens(e){const t=this.dexAggregator.getAvailableTokens().filter(t=>t.name.toLowerCase().includes(e.toLowerCase())||t.symbol.toLowerCase().includes(e.toLowerCase()));this.populateTokenList(t)}updateUI(){this.updateWalletButton(),this.updateChainSelector(),this.updateSwapButton(),this.loadTokenBalances()}updateWalletButton(){const e=this.elements["connect-wallet"];if(!e)return;const t=this.walletManager.getState();t.isConnected&&t.address?(e.textContent=`${t.address.slice(0,6)}...${t.address.slice(-4)}`,e.className="btn btn-outline"):(e.textContent="Connect Wallet",e.className="btn btn-primary")}updateChainSelector(){const e=this.elements["chain-selector"];if(!e)return;const t=this.walletManager.getChainId(),n=t?u[t]:null;e.innerHTML=n?`\n        <div class="flex items-center space-x-2">\n          <span>${n.name}</span>\n        </div>\n      `:"<span>Select Network</span>"}updateTokenSelectors(){this.updateTokenSelector("from",this.selectedFromToken),this.updateTokenSelector("to",this.selectedToToken)}updateTokenSelector(e,t){const n=this.elements[`${e}-token-selector`];n&&(n.innerHTML=t?`\n        <div class="flex items-center space-x-2">\n          <img src="${t.logoURI||"/default-token.svg"}" alt="${t.symbol}" class="w-6 h-6 rounded-full" />\n          <span>${t.symbol}</span>\n        </div>\n      `:"<span>Select Token</span>")}updateSwapButton(){const e=this.elements["swap-btn"],t=this.elements["swap-btn-text"],n=this.elements["swap-loading"];e&&t&&n&&(this.isSwapping?(e.setAttribute("disabled","true"),t.textContent="Swapping...",n.classList.remove("hidden")):this.walletManager.isConnected()?this.selectedFromToken&&this.selectedToToken?!this.fromAmount||parseFloat(this.fromAmount)<=0?(e.setAttribute("disabled","true"),t.textContent="Enter Amount",n.classList.add("hidden")):(e.removeAttribute("disabled"),t.textContent=this.useSmartAccount?"Swap with MEV Protection":"Swap",n.classList.add("hidden")):(e.setAttribute("disabled","true"),t.textContent="Select Tokens",n.classList.add("hidden")):(e.setAttribute("disabled","true"),t.textContent="Connect Wallet",n.classList.add("hidden")))}updateQuoteDisplay(e){const t=this.elements["to-amount"],n=this.elements["tx-info"],s=this.elements["estimated-gas"],a=this.elements["price-impact"];t&&(t.value=parseFloat(e.toAmount).toFixed(6)),n&&n.classList.remove("hidden"),s&&(s.textContent=`${parseInt(e.estimatedGas).toLocaleString()} gas`),a&&(a.textContent=`${e.priceImpact}%`)}clearQuoteDisplay(){const e=this.elements["to-amount"],t=this.elements["tx-info"];e&&(e.value=""),t&&t.classList.add("hidden")}async loadTokenBalances(){if(!this.walletManager.isConnected())return;const e=this.elements["from-balance"],t=this.elements["to-balance"];if(e&&this.selectedFromToken)try{const t=await this.dexAggregator.getTokenBalance(this.selectedFromToken);e.textContent=`Balance: ${parseFloat(t).toFixed(4)}`}catch(n){e.textContent="Balance: 0"}if(t&&this.selectedToToken)try{const e=await this.dexAggregator.getTokenBalance(this.selectedToToken);t.textContent=`Balance: ${parseFloat(e).toFixed(4)}`}catch(n){t.textContent="Balance: 0"}}getExplorerUrl(e){const t=this.walletManager.getChainId(),n=t?u[t]:null;return n?`${n.blockExplorer}/tx/${e}`:"#"}}var O=Object.defineProperty,F=(e,t,n)=>(((e,t,n)=>{t in e?O(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class N{constructor(){F(this,"container"),F(this,"notifications",new Map),F(this,"notificationId",0),this.container=this.createContainer(),document.body.appendChild(this.container)}initialize(){console.log("✅ Notification Manager initialized")}createContainer(){const e=document.createElement("div");return e.id="notification-container",e.className="toast toast-top toast-end z-50",e}showSuccess(e,t=5e3){return this.showNotification(e,"success",t)}showError(e,t=8e3){return this.showNotification(e,"error",t)}showWarning(e,t=6e3){return this.showNotification(e,"warning",t)}showInfo(e,t=4e3){return this.showNotification(e,"info",t)}showLoading(e){return this.showNotification(e,"loading",0)}showNotification(e,t,n){const s="notification-"+ ++this.notificationId,a=this.createNotification(s,e,t);return this.notifications.set(s,a),this.container.appendChild(a),requestAnimationFrame(()=>{a.classList.add("notification-enter")}),n>0&&setTimeout(()=>{this.removeNotification(s)},n),s}createNotification(e,t,n){const s=document.createElement("div");s.id=e,s.className=`alert notification-item ${this.getAlertClass(n)}`;const a=this.getIcon(n),i="loading"!==n?this.createCloseButton(e):"";return s.innerHTML=`\n      <div class="flex items-start space-x-3">\n        <div class="flex-shrink-0">\n          ${a}\n        </div>\n        <div class="flex-1 min-w-0">\n          <div class="text-sm">${t}</div>\n        </div>\n        ${i}\n      </div>\n    `,s}getAlertClass(e){switch(e){case"success":return"alert-success";case"error":return"alert-error";case"warning":return"alert-warning";default:return"alert-info"}}getIcon(e){switch(e){case"success":return'\n          <svg class="w-5 h-5 text-success" fill="currentColor" viewBox="0 0 20 20">\n            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>\n          </svg>\n        ';case"error":return'\n          <svg class="w-5 h-5 text-error" fill="currentColor" viewBox="0 0 20 20">\n            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>\n          </svg>\n        ';case"warning":return'\n          <svg class="w-5 h-5 text-warning" fill="currentColor" viewBox="0 0 20 20">\n            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>\n          </svg>\n        ';case"info":return'\n          <svg class="w-5 h-5 text-info" fill="currentColor" viewBox="0 0 20 20">\n            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>\n          </svg>\n        ';case"loading":return'\n          <svg class="w-5 h-5 text-info animate-spin" fill="none" viewBox="0 0 24 24">\n            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>\n            <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>\n          </svg>\n        ';default:return""}}createCloseButton(e){return`\n      <button class="btn btn-ghost btn-xs" onclick="window.notificationManager?.removeNotification('${e}')">\n        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>\n        </svg>\n      </button>\n    `}removeNotification(e){const t=this.notifications.get(e);t&&(t.classList.add("notification-exit"),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),this.notifications.delete(e)},300))}updateNotification(e,t,n){const s=this.notifications.get(e);if(!s)return;const a=s.querySelector(".text-sm");if(a&&(a.innerHTML=t),n){s.className=`alert notification-item ${this.getAlertClass(n)}`;const e=s.querySelector(".flex-shrink-0");e&&(e.innerHTML=this.getIcon(n))}}clearAll(){this.notifications.forEach((e,t)=>{this.removeNotification(t)})}showTransactionPending(e,t){const n=`\n      Transaction pending...\n      <a href="${t}/tx/${e}" target="_blank" class="link link-primary">\n        View on Explorer\n      </a>\n    `;return this.showLoading(n)}showTransactionSuccess(e,t){const n=`\n      Transaction confirmed!\n      <a href="${t}/tx/${e}" target="_blank" class="link link-primary">\n        View on Explorer\n      </a>\n    `;return this.showSuccess(n)}showTransactionFailed(e,t,n){const s=`\n      Transaction failed: ${n}\n      <a href="${t}/tx/${e}" target="_blank" class="link link-primary">\n        View on Explorer\n      </a>\n    `;return this.showError(s)}showWalletConnecting(){return this.showLoading("Connecting to wallet...")}showNetworkSwitching(e){return this.showLoading(`Switching to ${e}...`)}showApprovalPending(e){return this.showLoading(`Approving ${e}...`)}showSwapPending(){return this.showLoading("Executing swap...")}}var P=Object.defineProperty,z=(e,t,n)=>(((e,t,n)=>{t in e?P(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class H extends h{constructor(){super(),z(this,"container",null),z(this,"activeBundles",new Map),z(this,"userOperations",new Map),z(this,"isVisible",!1)}initialize(){this.container=document.getElementById("bundle-tracker"),this.container?(this.setupUI(),console.log("✅ Bundle Tracker initialized")):console.warn("Bundle tracker container not found")}setupUI(){if(!this.container)return;this.container.innerHTML=`\n      <div class="card bg-base-100 shadow-lg">\n        <div class="card-header">\n          <h3 class="card-title text-lg font-semibold">MEV Protection Status</h3>\n          <button id="bundle-tracker-toggle" class="btn btn-ghost btn-sm">\n            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>\n            </svg>\n          </button>\n        </div>\n        <div id="bundle-tracker-content" class="card-body ${this.isVisible?"":"hidden"}">\n          <div id="bundle-stats" class="stats stats-horizontal shadow mb-4">\n            <div class="stat">\n              <div class="stat-title">Active Bundles</div>\n              <div class="stat-value text-primary" id="active-bundles-count">0</div>\n            </div>\n            <div class="stat">\n              <div class="stat-title">Pending Ops</div>\n              <div class="stat-value text-secondary" id="pending-ops-count">0</div>\n            </div>\n            <div class="stat">\n              <div class="stat-title">MEV Saved</div>\n              <div class="stat-value text-success" id="mev-saved">$0</div>\n            </div>\n          </div>\n          \n          <div id="bundle-list" class="space-y-3">\n            <div id="no-bundles" class="text-center text-base-content/60 py-8">\n              <svg class="w-12 h-12 mx-auto mb-4 text-base-content/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>\n              </svg>\n              <p>No active bundles</p>\n              <p class="text-sm">Enable smart account for MEV protection</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;const e=document.getElementById("bundle-tracker-toggle"),t=document.getElementById("bundle-tracker-content");e&&t&&e.addEventListener("click",()=>{this.isVisible=!this.isVisible,t.classList.toggle("hidden",!this.isVisible);const n=e.querySelector("svg");n&&(n.style.transform=this.isVisible?"rotate(180deg)":"rotate(0deg)")})}trackUserOperation(e){this.userOperations.set(e.hash,e),this.updateStats(),this.addUserOperationToUI(e),this.emit("userOperationAdded",e)}trackBundle(e){this.activeBundles.set(e.id,e),this.updateStats(),this.addBundleToUI(e),this.emit("bundleAdded",e)}updateUserOperationStatus(e,t,n){const s=this.userOperations.get(e);s&&(s.status=t,n&&(s.txHash=n),this.updateUserOperationInUI(s),this.updateStats(),this.emit("userOperationUpdated",s))}updateBundleStatus(e,t,n){const s=this.activeBundles.get(e);s&&(s.status=t,n&&(s.txHash=n),this.updateBundleInUI(s),this.updateStats(),this.emit("bundleUpdated",s),"confirmed"!==t&&"failed"!==t||setTimeout(()=>{this.removeBundle(e)},1e4))}addMEVSavings(e,t="USD"){const n=this.getTotalMEVSavings()+e;localStorage.setItem("mev-savings",n.toString()),this.updateStats(),this.emit("mevSavingsUpdated",n)}updateStats(){const e=document.getElementById("active-bundles-count"),t=document.getElementById("pending-ops-count"),n=document.getElementById("mev-saved");if(e&&(e.textContent=this.activeBundles.size.toString()),t){const e=Array.from(this.userOperations.values()).filter(e=>"pending"===e.status).length;t.textContent=e.toString()}if(n){const e=this.getTotalMEVSavings();n.textContent=`$${e.toFixed(2)}`}}addUserOperationToUI(e){const t=document.getElementById("bundle-list"),n=document.getElementById("no-bundles");if(!t)return;n&&n.classList.add("hidden");const s=this.createUserOperationElement(e);t.appendChild(s)}addBundleToUI(e){const t=document.getElementById("bundle-list"),n=document.getElementById("no-bundles");if(!t)return;n&&n.classList.add("hidden");const s=this.createBundleElement(e);t.appendChild(s)}createUserOperationElement(e){const t=document.createElement("div");return t.id=`user-op-${e.hash}`,t.className="card bg-base-200 p-4",t.innerHTML=`\n      <div class="flex items-center justify-between">\n        <div class="flex items-center space-x-3">\n          <div class="${this.getStatusBadgeClass(e.status)}">\n            ${this.getStatusIcon(e.status)}\n          </div>\n          <div>\n            <div class="font-medium">User Operation</div>\n            <div class="text-sm text-base-content/60">${e.hash.slice(0,10)}...${e.hash.slice(-8)}</div>\n          </div>\n        </div>\n        <div class="text-right">\n          <div class="text-sm font-medium">${this.getStatusText(e.status)}</div>\n          <div class="text-xs text-base-content/60">${this.formatTimestamp(e.timestamp)}</div>\n        </div>\n      </div>\n      ${e.txHash?`\n        <div class="mt-3 pt-3 border-t border-base-300">\n          <a href="${this.getExplorerUrl(e.txHash)}" target="_blank" class="link link-primary text-sm">\n            View Transaction\n          </a>\n        </div>\n      `:""}\n    `,t}createBundleElement(e){const t=document.createElement("div");return t.id=`bundle-${e.id}`,t.className="card bg-base-200 p-4",t.innerHTML=`\n      <div class="flex items-center justify-between">\n        <div class="flex items-center space-x-3">\n          <div class="${this.getStatusBadgeClass(e.status)}">\n            ${this.getStatusIcon(e.status)}\n          </div>\n          <div>\n            <div class="font-medium">Bundle #${e.id.slice(-6)}</div>\n            <div class="text-sm text-base-content/60">${e.userOperations.length} operations</div>\n          </div>\n        </div>\n        <div class="text-right">\n          <div class="text-sm font-medium">${this.getStatusText(e.status)}</div>\n          <div class="text-xs text-base-content/60">${this.formatTimestamp(e.timestamp)}</div>\n        </div>\n      </div>\n      \n      <div class="mt-3">\n        <div class="flex items-center justify-between text-sm">\n          <span>MEV Protection:</span>\n          <span class="badge badge-success">Active</span>\n        </div>\n        <div class="flex items-center justify-between text-sm mt-1">\n          <span>Fair Ordering:</span>\n          <span class="badge badge-info">ZK-Proof</span>\n        </div>\n      </div>\n      \n      ${e.txHash?`\n        <div class="mt-3 pt-3 border-t border-base-300">\n          <a href="${this.getExplorerUrl(e.txHash)}" target="_blank" class="link link-primary text-sm">\n            View Bundle Transaction\n          </a>\n        </div>\n      `:""}\n    `,t}updateUserOperationInUI(e){const t=document.getElementById(`user-op-${e.hash}`);if(!t)return;const n=t.querySelector(".badge"),s=t.querySelector(".text-right .text-sm");if(n&&(n.className=this.getStatusBadgeClass(e.status),n.innerHTML=this.getStatusIcon(e.status)),s&&(s.textContent=this.getStatusText(e.status)),e.txHash&&!t.querySelector(".link")){const n=document.createElement("div");n.className="mt-3 pt-3 border-t border-base-300",n.innerHTML=`\n        <a href="${this.getExplorerUrl(e.txHash)}" target="_blank" class="link link-primary text-sm">\n          View Transaction\n        </a>\n      `,t.appendChild(n)}}updateBundleInUI(e){const t=document.getElementById(`bundle-${e.id}`);if(!t)return;const n=t.querySelector(".badge"),s=t.querySelector(".text-right .text-sm");if(n&&(n.className=this.getStatusBadgeClass(e.status),n.innerHTML=this.getStatusIcon(e.status)),s&&(s.textContent=this.getStatusText(e.status)),e.txHash&&!t.querySelector(".link")){const n=document.createElement("div");n.className="mt-3 pt-3 border-t border-base-300",n.innerHTML=`\n        <a href="${this.getExplorerUrl(e.txHash)}" target="_blank" class="link link-primary text-sm">\n          View Bundle Transaction\n        </a>\n      `,t.appendChild(n)}}removeBundle(e){const t=document.getElementById(`bundle-${e}`);if(t&&t.remove(),this.activeBundles.delete(e),this.updateStats(),0===this.activeBundles.size&&0===this.userOperations.size){const e=document.getElementById("no-bundles");e&&e.classList.remove("hidden")}}getStatusBadgeClass(e){switch(e){case"pending":return"badge badge-warning";case"submitted":case"included":return"badge badge-info";case"confirmed":return"badge badge-success";case"failed":return"badge badge-error";default:return"badge badge-ghost"}}getStatusIcon(e){switch(e){case"pending":return'<svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>';case"submitted":case"included":return'<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.293l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z" clip-rule="evenodd"></path></svg>';case"confirmed":return'<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>';case"failed":return'<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path></svg>';default:return""}}getStatusText(e){switch(e){case"pending":return"Pending";case"submitted":return"Submitted";case"included":return"Included";case"confirmed":return"Confirmed";case"failed":return"Failed";default:return"Unknown"}}formatTimestamp(e){return new Date(e).toLocaleTimeString()}getExplorerUrl(e){return`https://etherscan.io/tx/${e}`}getTotalMEVSavings(){const e=localStorage.getItem("mev-savings");return e?parseFloat(e):0}show(){this.container&&this.container.classList.remove("hidden")}hide(){this.container&&this.container.classList.add("hidden")}clear(){this.activeBundles.clear(),this.userOperations.clear();const e=document.getElementById("bundle-list");e&&(e.innerHTML='\n        <div id="no-bundles" class="text-center text-base-content/60 py-8">\n          <svg class="w-12 h-12 mx-auto mb-4 text-base-content/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>\n          </svg>\n          <p>No active bundles</p>\n          <p class="text-sm">Enable smart account for MEV protection</p>\n        </div>\n      '),this.updateStats()}}var D=Object.defineProperty,V=(e,t,n)=>(((e,t,n)=>{t in e?D(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class W{constructor(){V(this,"currentTheme","dark"),V(this,"THEME_KEY","dex-theme"),V(this,"THEMES",{light:{name:"light",displayName:"Light",icon:"☀️"},dark:{name:"dark",displayName:"Dark",icon:"🌙"}}),this.loadTheme()}initialize(){this.applyTheme(),this.setupThemeToggle(),console.log("✅ Theme Manager initialized")}loadTheme(){const e=localStorage.getItem(this.THEME_KEY);if(!e||"light"!==e&&"dark"!==e){const e=window.matchMedia("(prefers-color-scheme: dark)").matches;this.currentTheme=e?"dark":"light"}else this.currentTheme=e}applyTheme(){document.documentElement.setAttribute("data-theme",this.currentTheme),document.documentElement.classList.remove("light","dark"),document.documentElement.classList.add(this.currentTheme),this.updateMetaThemeColor(),localStorage.setItem(this.THEME_KEY,this.currentTheme)}updateMetaThemeColor(){const e=document.querySelector('meta[name="theme-color"]'),t={light:"#ffffff",dark:"#1f2937"};if(e)e.setAttribute("content",t[this.currentTheme]);else{const e=document.createElement("meta");e.name="theme-color",e.content=t[this.currentTheme],document.head.appendChild(e)}}setupThemeToggle(){const e=document.getElementById("theme-toggle");e&&(this.updateThemeToggle(e),e.addEventListener("click",()=>{this.toggleTheme()}),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",t=>{localStorage.getItem(this.THEME_KEY)||(this.currentTheme=t.matches?"dark":"light",this.applyTheme(),this.updateThemeToggle(e))}))}updateThemeToggle(e){const t=this.THEMES[this.currentTheme],n="light"===this.currentTheme?this.THEMES.dark:this.THEMES.light;e.innerHTML=`\n      <span class="swap-icon">${t.icon}</span>\n      <span class="sr-only">Switch to ${n.displayName} mode</span>\n    `,e.setAttribute("aria-label",`Switch to ${n.displayName} mode`),e.setAttribute("title",`Switch to ${n.displayName} mode`)}toggleTheme(){this.currentTheme="light"===this.currentTheme?"dark":"light",this.applyTheme();const e=document.getElementById("theme-toggle");e&&this.updateThemeToggle(e),window.dispatchEvent(new CustomEvent("themeChanged",{detail:{theme:this.currentTheme}}))}setTheme(e){if(e!==this.currentTheme){this.currentTheme=e,this.applyTheme();const t=document.getElementById("theme-toggle");t&&this.updateThemeToggle(t),window.dispatchEvent(new CustomEvent("themeChanged",{detail:{theme:this.currentTheme}}))}}getCurrentTheme(){return this.currentTheme}getThemeInfo(){return{current:this.THEMES[this.currentTheme],available:Object.values(this.THEMES)}}setCSSProperty(e,t){document.documentElement.style.setProperty(e,t)}getCSSProperty(e){return getComputedStyle(document.documentElement).getPropertyValue(e)}isDarkMode(){return"dark"===this.currentTheme}isLightMode(){return"light"===this.currentTheme}getThemeColors(){return{light:{primary:"#3b82f6",secondary:"#6b7280",accent:"#10b981",neutral:"#374151",base100:"#ffffff",base200:"#f3f4f6",base300:"#e5e7eb",info:"#0ea5e9",success:"#22c55e",warning:"#f59e0b",error:"#ef4444"},dark:{primary:"#60a5fa",secondary:"#9ca3af",accent:"#34d399",neutral:"#d1d5db",base100:"#1f2937",base200:"#374151",base300:"#4b5563",info:"#38bdf8",success:"#4ade80",warning:"#fbbf24",error:"#f87171"}}[this.currentTheme]}respectsReducedMotion(){return window.matchMedia("(prefers-reduced-motion: reduce)").matches}prefersHighContrast(){return window.matchMedia("(prefers-contrast: high)").matches}applyAccessibilityPreferences(){this.respectsReducedMotion()&&document.documentElement.classList.add("reduce-motion"),this.prefersHighContrast()&&document.documentElement.classList.add("high-contrast")}animateThemeTransition(){this.respectsReducedMotion()||(document.documentElement.classList.add("theme-transition"),setTimeout(()=>{document.documentElement.classList.remove("theme-transition")},300))}}var q=Object.defineProperty,_=(e,t,n)=>(((e,t,n)=>{t in e?q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);class j{constructor(){_(this,"walletManager"),_(this,"dexAggregator"),_(this,"uiManager"),_(this,"notificationManager"),_(this,"bundleTracker"),_(this,"themeManager"),this.walletManager=new p,this.dexAggregator=new C(this.walletManager),this.notificationManager=new N,this.bundleTracker=new H,this.themeManager=new W,this.uiManager=new U(this.walletManager,this.dexAggregator,this.notificationManager)}async initialize(){try{console.log("🚀 Initializing FortiFi DEX Aggregator..."),this.themeManager.initialize(),await this.walletManager.initialize(),await this.dexAggregator.initialize(),this.uiManager.initialize(),this.bundleTracker.initialize(),console.log("✅ Application initialized successfully")}catch(e){console.error("❌ Failed to initialize application:",e),this.notificationManager.showError("Failed to initialize application")}}}document.addEventListener("DOMContentLoaded",async()=>{const e=new j;await e.initialize()}),window.addEventListener("error",e=>{console.error("Unhandled error:",e.error)}),window.addEventListener("unhandledrejection",e=>{console.error("Unhandled promise rejection:",e.reason),e.preventDefault()});
//# sourceMappingURL=main-5d24f2c9.js.map
